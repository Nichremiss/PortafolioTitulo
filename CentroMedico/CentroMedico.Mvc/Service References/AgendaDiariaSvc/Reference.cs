//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CentroMedico.Mvc.AgendaDiariaSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AgendaDiariaSvc.IAgendaDiariasvc")]
    public interface IAgendaDiariasvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiariaResponse")]
        bool InsertarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiariaResponse")]
        System.Threading.Tasks.Task<bool> InsertarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/EditarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/EditarAgendaDiariaResponse")]
        bool EditarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/EditarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/EditarAgendaDiariaResponse")]
        System.Threading.Tasks.Task<bool> EditarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendario", ReplyAction="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendarioResponse")]
        string ObtenerCalendario(CentroMedico.Datos.AgendaDiariaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendario", ReplyAction="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendarioResponse")]
        System.Threading.Tasks.Task<string> ObtenerCalendarioAsync(CentroMedico.Datos.AgendaDiariaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponibles", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesResponse")]
        string MuestraHorasDisponibles(string c_med, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponibles", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesResponse")]
        System.Threading.Tasks.Task<string> MuestraHorasDisponiblesAsync(string c_med, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasxdia", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasxdiaResponse")]
        string MuestraHorasxdia(string c_med, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasxdia", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasxdiaResponse")]
        System.Threading.Tasks.Task<string> MuestraHorasxdiaAsync(string c_med, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesGeneral", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesGeneralResponse")]
        string MuestraHorasDisponiblesGeneral(string c_esp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesGeneral", ReplyAction="http://tempuri.org/IAgendaDiariasvc/MuestraHorasDisponiblesGeneralResponse")]
        System.Threading.Tasks.Task<string> MuestraHorasDisponiblesGeneralAsync(string c_esp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgendaDiariasvcChannel : CentroMedico.Mvc.AgendaDiariaSvc.IAgendaDiariasvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgendaDiariasvcClient : System.ServiceModel.ClientBase<CentroMedico.Mvc.AgendaDiariaSvc.IAgendaDiariasvc>, CentroMedico.Mvc.AgendaDiariaSvc.IAgendaDiariasvc {
        
        public AgendaDiariasvcClient() {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaDiariasvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.InsertarAgendaDiaria(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.InsertarAgendaDiariaAsync(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public bool EditarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.EditarAgendaDiaria(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public System.Threading.Tasks.Task<bool> EditarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.EditarAgendaDiariaAsync(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public string ObtenerCalendario(CentroMedico.Datos.AgendaDiariaEnt entidad) {
            return base.Channel.ObtenerCalendario(entidad);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCalendarioAsync(CentroMedico.Datos.AgendaDiariaEnt entidad) {
            return base.Channel.ObtenerCalendarioAsync(entidad);
        }
        
        public string MuestraHorasDisponibles(string c_med, string fecha) {
            return base.Channel.MuestraHorasDisponibles(c_med, fecha);
        }
        
        public System.Threading.Tasks.Task<string> MuestraHorasDisponiblesAsync(string c_med, string fecha) {
            return base.Channel.MuestraHorasDisponiblesAsync(c_med, fecha);
        }
        
        public string MuestraHorasxdia(string c_med, string fecha) {
            return base.Channel.MuestraHorasxdia(c_med, fecha);
        }
        
        public System.Threading.Tasks.Task<string> MuestraHorasxdiaAsync(string c_med, string fecha) {
            return base.Channel.MuestraHorasxdiaAsync(c_med, fecha);
        }
        
        public string MuestraHorasDisponiblesGeneral(string c_esp) {
            return base.Channel.MuestraHorasDisponiblesGeneral(c_esp);
        }
        
        public System.Threading.Tasks.Task<string> MuestraHorasDisponiblesGeneralAsync(string c_esp) {
            return base.Channel.MuestraHorasDisponiblesGeneralAsync(c_esp);
        }
    }
}
