//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CentroMedico.Mvc.ReservaSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReservaSvc.IReserva")]
    public interface IReserva {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/InsertarReserva", ReplyAction="http://tempuri.org/IReserva/InsertarReservaResponse")]
        bool InsertarReserva(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/InsertarReserva", ReplyAction="http://tempuri.org/IReserva/InsertarReservaResponse")]
        System.Threading.Tasks.Task<bool> InsertarReservaAsync(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraDatoReserva", ReplyAction="http://tempuri.org/IReserva/MuestraDatoReservaResponse")]
        CentroMedico.Datos.ReservaEnt MuestraDatoReserva(string c_esp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraDatoReserva", ReplyAction="http://tempuri.org/IReserva/MuestraDatoReservaResponse")]
        System.Threading.Tasks.Task<CentroMedico.Datos.ReservaEnt> MuestraDatoReservaAsync(string c_esp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraListaTodasLasReservasRealizadas", ReplyAction="http://tempuri.org/IReserva/MuestraListaTodasLasReservasRealizadasResponse")]
        string MuestraListaTodasLasReservasRealizadas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraListaTodasLasReservasRealizadas", ReplyAction="http://tempuri.org/IReserva/MuestraListaTodasLasReservasRealizadasResponse")]
        System.Threading.Tasks.Task<string> MuestraListaTodasLasReservasRealizadasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/ListaTodosLosPacientesEnEspera", ReplyAction="http://tempuri.org/IReserva/ListaTodosLosPacientesEnEsperaResponse")]
        string ListaTodosLosPacientesEnEspera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/ListaTodosLosPacientesEnEspera", ReplyAction="http://tempuri.org/IReserva/ListaTodosLosPacientesEnEsperaResponse")]
        System.Threading.Tasks.Task<string> ListaTodosLosPacientesEnEsperaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraPacientesEsperaXdoctor", ReplyAction="http://tempuri.org/IReserva/MuestraPacientesEsperaXdoctorResponse")]
        string MuestraPacientesEsperaXdoctor(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraPacientesEsperaXdoctor", ReplyAction="http://tempuri.org/IReserva/MuestraPacientesEsperaXdoctorResponse")]
        System.Threading.Tasks.Task<string> MuestraPacientesEsperaXdoctorAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraListaDeReservaXpaciente", ReplyAction="http://tempuri.org/IReserva/MuestraListaDeReservaXpacienteResponse")]
        string MuestraListaDeReservaXpaciente(string rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/MuestraListaDeReservaXpaciente", ReplyAction="http://tempuri.org/IReserva/MuestraListaDeReservaXpacienteResponse")]
        System.Threading.Tasks.Task<string> MuestraListaDeReservaXpacienteAsync(string rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/CambiarEstadoPaciente", ReplyAction="http://tempuri.org/IReserva/CambiarEstadoPacienteResponse")]
        bool CambiarEstadoPaciente(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/CambiarEstadoPaciente", ReplyAction="http://tempuri.org/IReserva/CambiarEstadoPacienteResponse")]
        System.Threading.Tasks.Task<bool> CambiarEstadoPacienteAsync(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/CambiarEstadoPacienteEspera", ReplyAction="http://tempuri.org/IReserva/CambiarEstadoPacienteEsperaResponse")]
        bool CambiarEstadoPacienteEspera(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/CambiarEstadoPacienteEspera", ReplyAction="http://tempuri.org/IReserva/CambiarEstadoPacienteEsperaResponse")]
        System.Threading.Tasks.Task<bool> CambiarEstadoPacienteEsperaAsync(CentroMedico.Datos.ReservaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/AnularReservaPaciente", ReplyAction="http://tempuri.org/IReserva/AnularReservaPacienteResponse")]
        bool AnularReservaPaciente(string id_reserva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReserva/AnularReservaPaciente", ReplyAction="http://tempuri.org/IReserva/AnularReservaPacienteResponse")]
        System.Threading.Tasks.Task<bool> AnularReservaPacienteAsync(string id_reserva);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReservaChannel : CentroMedico.Mvc.ReservaSvc.IReserva, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReservaClient : System.ServiceModel.ClientBase<CentroMedico.Mvc.ReservaSvc.IReserva>, CentroMedico.Mvc.ReservaSvc.IReserva {
        
        public ReservaClient() {
        }
        
        public ReservaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReservaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarReserva(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.InsertarReserva(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarReservaAsync(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.InsertarReservaAsync(entidad);
        }
        
        public CentroMedico.Datos.ReservaEnt MuestraDatoReserva(string c_esp) {
            return base.Channel.MuestraDatoReserva(c_esp);
        }
        
        public System.Threading.Tasks.Task<CentroMedico.Datos.ReservaEnt> MuestraDatoReservaAsync(string c_esp) {
            return base.Channel.MuestraDatoReservaAsync(c_esp);
        }
        
        public string MuestraListaTodasLasReservasRealizadas() {
            return base.Channel.MuestraListaTodasLasReservasRealizadas();
        }
        
        public System.Threading.Tasks.Task<string> MuestraListaTodasLasReservasRealizadasAsync() {
            return base.Channel.MuestraListaTodasLasReservasRealizadasAsync();
        }
        
        public string ListaTodosLosPacientesEnEspera() {
            return base.Channel.ListaTodosLosPacientesEnEspera();
        }
        
        public System.Threading.Tasks.Task<string> ListaTodosLosPacientesEnEsperaAsync() {
            return base.Channel.ListaTodosLosPacientesEnEsperaAsync();
        }
        
        public string MuestraPacientesEsperaXdoctor(string nombre) {
            return base.Channel.MuestraPacientesEsperaXdoctor(nombre);
        }
        
        public System.Threading.Tasks.Task<string> MuestraPacientesEsperaXdoctorAsync(string nombre) {
            return base.Channel.MuestraPacientesEsperaXdoctorAsync(nombre);
        }
        
        public string MuestraListaDeReservaXpaciente(string rut) {
            return base.Channel.MuestraListaDeReservaXpaciente(rut);
        }
        
        public System.Threading.Tasks.Task<string> MuestraListaDeReservaXpacienteAsync(string rut) {
            return base.Channel.MuestraListaDeReservaXpacienteAsync(rut);
        }
        
        public bool CambiarEstadoPaciente(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.CambiarEstadoPaciente(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> CambiarEstadoPacienteAsync(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.CambiarEstadoPacienteAsync(entidad);
        }
        
        public bool CambiarEstadoPacienteEspera(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.CambiarEstadoPacienteEspera(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> CambiarEstadoPacienteEsperaAsync(CentroMedico.Datos.ReservaEnt entidad) {
            return base.Channel.CambiarEstadoPacienteEsperaAsync(entidad);
        }
        
        public bool AnularReservaPaciente(string id_reserva) {
            return base.Channel.AnularReservaPaciente(id_reserva);
        }
        
        public System.Threading.Tasks.Task<bool> AnularReservaPacienteAsync(string id_reserva) {
            return base.Channel.AnularReservaPacienteAsync(id_reserva);
        }
    }
}
