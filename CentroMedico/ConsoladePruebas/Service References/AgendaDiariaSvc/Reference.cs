//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoladePruebas.AgendaDiariaSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AgendaDiariaSvc.IAgendaDiariasvc")]
    public interface IAgendaDiariasvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiariaResponse")]
        bool InsertarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiaria", ReplyAction="http://tempuri.org/IAgendaDiariasvc/InsertarAgendaDiariaResponse")]
        System.Threading.Tasks.Task<bool> InsertarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendario", ReplyAction="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendarioResponse")]
        string ObtenerCalendario(CentroMedico.Datos.AgendaDiariaEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendario", ReplyAction="http://tempuri.org/IAgendaDiariasvc/ObtenerCalendarioResponse")]
        System.Threading.Tasks.Task<string> ObtenerCalendarioAsync(CentroMedico.Datos.AgendaDiariaEnt entidad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgendaDiariasvcChannel : ConsoladePruebas.AgendaDiariaSvc.IAgendaDiariasvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgendaDiariasvcClient : System.ServiceModel.ClientBase<ConsoladePruebas.AgendaDiariaSvc.IAgendaDiariasvc>, ConsoladePruebas.AgendaDiariaSvc.IAgendaDiariasvc {
        
        public AgendaDiariasvcClient() {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaDiariasvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaDiariasvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarAgendaDiaria(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.InsertarAgendaDiaria(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAgendaDiariaAsync(CentroMedico.Datos.AgendaDiariaEnt entidad, string hora_inicio, string hora_termino, string duracion) {
            return base.Channel.InsertarAgendaDiariaAsync(entidad, hora_inicio, hora_termino, duracion);
        }
        
        public string ObtenerCalendario(CentroMedico.Datos.AgendaDiariaEnt entidad) {
            return base.Channel.ObtenerCalendario(entidad);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCalendarioAsync(CentroMedico.Datos.AgendaDiariaEnt entidad) {
            return base.Channel.ObtenerCalendarioAsync(entidad);
        }
    }
}
