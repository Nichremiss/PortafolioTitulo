//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.Medico {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicoEnt", Namespace="http://schemas.datacontract.org/2004/07/CentroMedico.Datos")]
    [System.SerializableAttribute()]
    public partial class MedicoEnt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_apellido_maternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_apellido_paternoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_claveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_especialidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_rutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medico_sucursalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_apellido_materno {
            get {
                return this.medico_apellido_maternoField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_apellido_maternoField, value) != true)) {
                    this.medico_apellido_maternoField = value;
                    this.RaisePropertyChanged("medico_apellido_materno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_apellido_paterno {
            get {
                return this.medico_apellido_paternoField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_apellido_paternoField, value) != true)) {
                    this.medico_apellido_paternoField = value;
                    this.RaisePropertyChanged("medico_apellido_paterno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_clave {
            get {
                return this.medico_claveField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_claveField, value) != true)) {
                    this.medico_claveField = value;
                    this.RaisePropertyChanged("medico_clave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_email {
            get {
                return this.medico_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_emailField, value) != true)) {
                    this.medico_emailField = value;
                    this.RaisePropertyChanged("medico_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_especialidad {
            get {
                return this.medico_especialidadField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_especialidadField, value) != true)) {
                    this.medico_especialidadField = value;
                    this.RaisePropertyChanged("medico_especialidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_id {
            get {
                return this.medico_idField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_idField, value) != true)) {
                    this.medico_idField = value;
                    this.RaisePropertyChanged("medico_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_nombre {
            get {
                return this.medico_nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_nombreField, value) != true)) {
                    this.medico_nombreField = value;
                    this.RaisePropertyChanged("medico_nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_rut {
            get {
                return this.medico_rutField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_rutField, value) != true)) {
                    this.medico_rutField = value;
                    this.RaisePropertyChanged("medico_rut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medico_sucursal {
            get {
                return this.medico_sucursalField;
            }
            set {
                if ((object.ReferenceEquals(this.medico_sucursalField, value) != true)) {
                    this.medico_sucursalField = value;
                    this.RaisePropertyChanged("medico_sucursal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Medico.IMedico")]
    public interface IMedico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ValidarLoginMedico", ReplyAction="http://tempuri.org/IMedico/ValidarLoginMedicoResponse")]
        bool ValidarLoginMedico(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ValidarLoginMedico", ReplyAction="http://tempuri.org/IMedico/ValidarLoginMedicoResponse")]
        System.Threading.Tasks.Task<bool> ValidarLoginMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/InsertarMedico", ReplyAction="http://tempuri.org/IMedico/InsertarMedicoResponse")]
        bool InsertarMedico(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/InsertarMedico", ReplyAction="http://tempuri.org/IMedico/InsertarMedicoResponse")]
        System.Threading.Tasks.Task<bool> InsertarMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedico", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicoResponse")]
        string ObtenerMedico();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedico", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicoResponse")]
        System.Threading.Tasks.Task<string> ObtenerMedicoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ValidaDuplicidadMedico", ReplyAction="http://tempuri.org/IMedico/ValidaDuplicidadMedicoResponse")]
        bool ValidaDuplicidadMedico(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ValidaDuplicidadMedico", ReplyAction="http://tempuri.org/IMedico/ValidaDuplicidadMedicoResponse")]
        System.Threading.Tasks.Task<bool> ValidaDuplicidadMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedicosAgenda", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicosAgendaResponse")]
        string ObtenerMedicosAgenda();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedicosAgenda", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicosAgendaResponse")]
        System.Threading.Tasks.Task<string> ObtenerMedicosAgendaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedicosSinAgenda", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicosSinAgendaResponse")]
        string ObtenerMedicosSinAgenda();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedico/ObtenerMedicosSinAgenda", ReplyAction="http://tempuri.org/IMedico/ObtenerMedicosSinAgendaResponse")]
        System.Threading.Tasks.Task<string> ObtenerMedicosSinAgendaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicoChannel : ConsoleApplication1.Medico.IMedico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicoClient : System.ServiceModel.ClientBase<ConsoleApplication1.Medico.IMedico>, ConsoleApplication1.Medico.IMedico {
        
        public MedicoClient() {
        }
        
        public MedicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidarLoginMedico(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.ValidarLoginMedico(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarLoginMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.ValidarLoginMedicoAsync(entidad);
        }
        
        public bool InsertarMedico(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.InsertarMedico(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.InsertarMedicoAsync(entidad);
        }
        
        public string ObtenerMedico() {
            return base.Channel.ObtenerMedico();
        }
        
        public System.Threading.Tasks.Task<string> ObtenerMedicoAsync() {
            return base.Channel.ObtenerMedicoAsync();
        }
        
        public bool ValidaDuplicidadMedico(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.ValidaDuplicidadMedico(entidad);
        }
        
        public System.Threading.Tasks.Task<bool> ValidaDuplicidadMedicoAsync(ConsoleApplication1.Medico.MedicoEnt entidad) {
            return base.Channel.ValidaDuplicidadMedicoAsync(entidad);
        }
        
        public string ObtenerMedicosAgenda() {
            return base.Channel.ObtenerMedicosAgenda();
        }
        
        public System.Threading.Tasks.Task<string> ObtenerMedicosAgendaAsync() {
            return base.Channel.ObtenerMedicosAgendaAsync();
        }
        
        public string ObtenerMedicosSinAgenda() {
            return base.Channel.ObtenerMedicosSinAgenda();
        }
        
        public System.Threading.Tasks.Task<string> ObtenerMedicosSinAgendaAsync() {
            return base.Channel.ObtenerMedicosSinAgendaAsync();
        }
    }
}
